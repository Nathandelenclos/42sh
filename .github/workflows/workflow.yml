on:
  push:
    branches-ignore:
      - 'ga-ignore-*'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2026/B-PSU-210-LIL-2-1-42sh-simon.riembault.git"
  EXECUTABLES: "42sh"

jobs:
  check_repository_cleanliness:
    runs-on: ubuntu-latest
    name: Checks if the repository is clean and void of any unwanted files (temp files, binary files, etc.)
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: check
        run: |
          for i in $(find . -type f -name "*.o" -o -type d -name "tmp" -o -name "#*#" -o -name "*~" -o -name "*.a" -o -name "*.so" -o -name "*pain_au_chocolat*" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov");
            do echo "::error title=Unwanted file detected,file=${i},line=1,col=1,endColumn=1::${i}";
          done
          test=$(find . -type f -name "*.o" -o -type d -name "tmp" -o -name "#*#" -o -name "*~" -o -name "*.a" -o -name "*.so" -o -name "*pain_au_chocolat*" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" | wc -l);
          if [[ ${test} -ge 1 ]];
            then exit 84;
          fi;

  run_tests:
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2

  check_program_compilation:
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: make all
        run: make
        timeout-minutes: 2
      - name: clean
        run: make clean
      - name: Check files existences
        run: |
          DataList=${{env.EXECUTABLES}}
          Field_Separator=$IFS
          IFS=,
          for val in $DataList;
          do
          if test ! -x $val; 
            then echo "::error title=Build Error,file=${val}::${val}"; exit 1;
          fi;
          done
          IFS=$Field_Separator

  push_to_mirror:
    runs-on: ubuntu-latest
    needs:
      - check_program_compilation
      - run_tests
      - check_repository_cleanliness
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}

  normez:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: install normez
        run: git clone https://github.com/ronanboiteau/NormEZ.git normez
      - name:
        run: make -C ./normez install
      - name: run normez
        run: |
          echo "::error title=Normez Error::"
          normez

  functional-tests:
    runs-on: ubuntu-latest
    needs:
      - check_program_compilation
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: make all
        run: make
        timeout-minutes: 2
      - name: clean
        run: make clean
      - name: run tests
        run: ./functional-tests.sh